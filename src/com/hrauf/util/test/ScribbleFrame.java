/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on Nov 19, 2011, 7:58:58 AM
 */
package com.hrauf.util.test;

import java.awt.image.BufferedImage;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;

/**
 *
 * @author Hammad
 */
public class ScribbleFrame extends javax.swing.JFrame {

    /** Creates new form NewJFrame */
    public ScribbleFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scribblePanel1 = new com.hrauf.util.ScribblePanel();
        scribblePanel2 = new com.hrauf.util.ScribblePanel();
        butCopyImage = new javax.swing.JButton();
        butPutImage = new javax.swing.JButton();
        scribblePanel3 = new com.hrauf.util.ScribblePanel();
        scribblePanel4 = new com.hrauf.util.ScribblePanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        butLoadPNGFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ScribbleFrame");

        scribblePanel1.setName("scribblePanel1"); // NOI18N

        javax.swing.GroupLayout scribblePanel1Layout = new javax.swing.GroupLayout(scribblePanel1);
        scribblePanel1.setLayout(scribblePanel1Layout);
        scribblePanel1Layout.setHorizontalGroup(
            scribblePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 158, Short.MAX_VALUE)
        );
        scribblePanel1Layout.setVerticalGroup(
            scribblePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 202, Short.MAX_VALUE)
        );

        scribblePanel2.setName("scribblePanel2"); // NOI18N
        scribblePanel2.setPreferredSize(new java.awt.Dimension(158, 188));

        javax.swing.GroupLayout scribblePanel2Layout = new javax.swing.GroupLayout(scribblePanel2);
        scribblePanel2.setLayout(scribblePanel2Layout);
        scribblePanel2Layout.setHorizontalGroup(
            scribblePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 158, Short.MAX_VALUE)
        );
        scribblePanel2Layout.setVerticalGroup(
            scribblePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 202, Short.MAX_VALUE)
        );

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(ScribbleFrame.class, this);
        butCopyImage.setAction(actionMap.get("action_copyImage")); // NOI18N
        butCopyImage.setName("butCopyImage"); // NOI18N

        butPutImage.setAction(actionMap.get("action_putImage")); // NOI18N
        butPutImage.setName("butPutImage"); // NOI18N

        scribblePanel3.setHeight(200);
        scribblePanel3.setName("scribblePanel3"); // NOI18N
        scribblePanel3.setPreferredSize(new java.awt.Dimension(100, 100));
        scribblePanel3.setWidth(200);

        javax.swing.GroupLayout scribblePanel3Layout = new javax.swing.GroupLayout(scribblePanel3);
        scribblePanel3.setLayout(scribblePanel3Layout);
        scribblePanel3Layout.setHorizontalGroup(
            scribblePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        scribblePanel3Layout.setVerticalGroup(
            scribblePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        scribblePanel4.setHeight(200);
        scribblePanel4.setName("scribblePanel4"); // NOI18N
        scribblePanel4.setWidth(200);

        javax.swing.GroupLayout scribblePanel4Layout = new javax.swing.GroupLayout(scribblePanel4);
        scribblePanel4.setLayout(scribblePanel4Layout);
        scribblePanel4Layout.setHorizontalGroup(
            scribblePanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        scribblePanel4Layout.setVerticalGroup(
            scribblePanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(100);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        butLoadPNGFile.setAction(actionMap.get("action_LoadPNGFile")); // NOI18N
        butLoadPNGFile.setText("Load PNG File");
        butLoadPNGFile.setName("butLoadPNGFile"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(butCopyImage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butPutImage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butLoadPNGFile))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(scribblePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scribblePanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scribblePanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scribblePanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(butCopyImage)
                            .addComponent(butPutImage)))
                    .addComponent(butLoadPNGFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scribblePanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(scribblePanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scribblePanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scribblePanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScribbleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScribbleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScribbleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScribbleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ScribbleFrame().setVisible(true);
            }
        });
    }

    @Action
    public void action_copyImage() {
        scribblePanel1.mergeLayers();
        //byte[] b1 = scribblePanel1.getByteArray();
        BufferedImage b1 = scribblePanel1.getBufferedImage();
        byte[] pngBytes = scribblePanel1.getPNGBytesArray();
        String pngString = scribblePanel1.getPNGUTF8String();

        jTextArea1.setText(pngString);

        Logger.getLogger(TestScribble.class.getName()).log(Level.INFO, "CopyImage: Writing to file1.png");
        OutputStream f1 = null;
        try {
            f1 = new FileOutputStream("file1.png");
            for (int i = 0; i < pngBytes.length; i++) {
                f1.write(pngBytes[i]);
            }
        } catch (Exception e1) {
            Logger.getLogger(TestScribble.class.getName()).log(Level.SEVERE, "CopyImage error: Exception e1", e1);
        } finally {
            if (f1 != null) {
                try {
                    f1.close();
                } catch (Exception ioe) {
                    Logger.getLogger(TestScribble.class.getName()).log(Level.SEVERE, "CopyImage error: IOException ioe", ioe);
                }
            }
        }


        scribblePanel3.mergeLayers();
        byte[] b3 = scribblePanel3.getByteArray();

        try {
            scribblePanel2.setBufferedImage(b1);
            scribblePanel4.setByteArray(b3);
        } catch (Exception ex) {
            Logger.getLogger(TestScribble.class.getName()).log(Level.SEVERE, "CopyImage error:\npanel1 size=" + scribblePanel1.getSize() + "\npanel2 size=" + scribblePanel2.getSize(), ex);
        }
    }

    @Action
    public void action_putImage() {
        int width1 = scribblePanel1.getWidth();
        int height1 = scribblePanel1.getHeight();
        int prod1 = width1 * height1;
        byte b1[] = new byte[prod1];
        for (int i = 0; i < height1; i++) {
            for (int j = 0; j < width1; j++) {
                if (((i >= 3) & (i <= 5)) | ((j >= 3) & (j <= 5))) {
                    b1[(i * (width1)) + j] = (byte) 0x00;
                } else {
                    b1[(i * (width1)) + j] = (byte) 0xff;
                }
            }
        }

        int width3 = scribblePanel3.getWidth();
        int height3 = scribblePanel3.getHeight();
        int prod3 = width3 * height3;
        byte b3[] = new byte[prod3];
        for (int i = 0; i < height3; i++) {
            for (int j = 0; j < width3; j++) {
                if (((i >= 3) & (i <= 5)) | ((j >= 3) & (j <= 5))) {
                    b3[(i * (width3)) + j] = (byte) 0x00;
                } else {
                    b3[(i * (width3)) + j] = (byte) 0xff;
                }
            }
        }

        try {
            scribblePanel1.setByteArray(width1, height1, b1);
            scribblePanel3.setByteArray(width3, height3, b3);
        } catch (Exception ex) {
            Logger.getLogger(TestScribble.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Action
    public void action_LoadPNGFile() {
        byte[] pngBytes = null;
        File file = new File("file1.png");
        FileInputStream f1 = null;
        Logger.getLogger(TestScribble.class.getName()).log(Level.INFO, "LoadPNGFile: Reading from file1.png");
        try {
            f1 = new FileInputStream(file);
            pngBytes = new byte[(int) file.length()];
            f1.read(pngBytes);
        } catch (Exception e1) {
            Logger.getLogger(TestScribble.class.getName()).log(Level.SEVERE, "LoadPNGFile error: Exception e1", e1);
        } finally {
            if (f1 != null) {
                try {
                    f1.close();
                } catch (Exception ioe) {
                    Logger.getLogger(TestScribble.class.getName()).log(Level.SEVERE, "LoadPNGFile error: IOException ioe", ioe);
                }
                if (file != null) {
                    try {
                        // file.close();
                    } catch (Exception ioe) {
                        Logger.getLogger(TestScribble.class.getName()).log(Level.SEVERE, "LoadPNGFile error: IOException ioe", ioe);
                    }
                }
            }
        }
        try {
            scribblePanel2.setPNGBytesArray(pngBytes);
        } catch (Exception ex) {
            Logger.getLogger(ScribbleFrame.class.getName()).log(Level.SEVERE, "LoadPNGFile showing error", ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butCopyImage;
    private javax.swing.JButton butLoadPNGFile;
    private javax.swing.JButton butPutImage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private com.hrauf.util.ScribblePanel scribblePanel1;
    private com.hrauf.util.ScribblePanel scribblePanel2;
    private com.hrauf.util.ScribblePanel scribblePanel3;
    private com.hrauf.util.ScribblePanel scribblePanel4;
    // End of variables declaration//GEN-END:variables
}
